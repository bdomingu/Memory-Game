{"ast":null,"code":"import React from 'react';\nimport { useChat } from './hooks/useChat';\nimport { useCreateChatContext } from './hooks/useCreateChatContext';\nimport { useChannelsQueryState } from './hooks/useChannelsQueryState';\nimport { darkModeTheme, useCustomStyles } from './hooks/useCustomStyles';\nimport { ChatProvider } from '../../context/ChatContext';\nimport { TranslationProvider } from '../../context/TranslationContext';\n/**\n * Wrapper component for a StreamChat application. Chat needs to be placed around any other chat components\n * as it provides the ChatContext.\n */\n\nexport var Chat = function (props) {\n  var children = props.children,\n      client = props.client,\n      customClasses = props.customClasses,\n      customStyles = props.customStyles,\n      _a = props.darkMode,\n      darkMode = _a === void 0 ? false : _a,\n      defaultLanguage = props.defaultLanguage,\n      i18nInstance = props.i18nInstance,\n      _b = props.initialNavOpen,\n      initialNavOpen = _b === void 0 ? true : _b,\n      _c = props.theme,\n      theme = _c === void 0 ? 'messaging light' : _c,\n      _d = props.useImageFlagEmojisOnWindows,\n      useImageFlagEmojisOnWindows = _d === void 0 ? false : _d;\n\n  var _e = useChat({\n    client: client,\n    defaultLanguage: defaultLanguage,\n    i18nInstance: i18nInstance,\n    initialNavOpen: initialNavOpen\n  }),\n      channel = _e.channel,\n      closeMobileNav = _e.closeMobileNav,\n      getAppSettings = _e.getAppSettings,\n      latestMessageDatesByChannels = _e.latestMessageDatesByChannels,\n      mutes = _e.mutes,\n      navOpen = _e.navOpen,\n      openMobileNav = _e.openMobileNav,\n      setActiveChannel = _e.setActiveChannel,\n      translators = _e.translators;\n\n  var channelsQueryState = useChannelsQueryState();\n  var themeVersion = getComputedStyle(document.documentElement).getPropertyValue('--str-chat__theme-version').replace(' ', '') || '1';\n  useCustomStyles(darkMode ? darkModeTheme : customStyles);\n  var chatContextValue = useCreateChatContext({\n    channel: channel,\n    channelsQueryState: channelsQueryState,\n    client: client,\n    closeMobileNav: closeMobileNav,\n    customClasses: customClasses,\n    getAppSettings: getAppSettings,\n    latestMessageDatesByChannels: latestMessageDatesByChannels,\n    mutes: mutes,\n    navOpen: navOpen,\n    openMobileNav: openMobileNav,\n    setActiveChannel: setActiveChannel,\n    theme: theme,\n    themeVersion: themeVersion,\n    useImageFlagEmojisOnWindows: useImageFlagEmojisOnWindows\n  });\n  if (!translators.t) return null;\n  return React.createElement(ChatProvider, {\n    value: chatContextValue\n  }, React.createElement(TranslationProvider, {\n    value: translators\n  }, children));\n};","map":{"version":3,"names":["React","useChat","useCreateChatContext","useChannelsQueryState","darkModeTheme","useCustomStyles","ChatProvider","TranslationProvider","Chat","props","children","client","customClasses","customStyles","_a","darkMode","defaultLanguage","i18nInstance","_b","initialNavOpen","_c","theme","_d","useImageFlagEmojisOnWindows","_e","channel","closeMobileNav","getAppSettings","latestMessageDatesByChannels","mutes","navOpen","openMobileNav","setActiveChannel","translators","channelsQueryState","themeVersion","getComputedStyle","document","documentElement","getPropertyValue","replace","chatContextValue","t","createElement","value"],"sources":["/home/betty/web-app-practice/memory-game/client/node_modules/stream-chat-react/dist/components/Chat/Chat.js"],"sourcesContent":["import React from 'react';\nimport { useChat } from './hooks/useChat';\nimport { useCreateChatContext } from './hooks/useCreateChatContext';\nimport { useChannelsQueryState } from './hooks/useChannelsQueryState';\nimport { darkModeTheme, useCustomStyles } from './hooks/useCustomStyles';\nimport { ChatProvider } from '../../context/ChatContext';\nimport { TranslationProvider } from '../../context/TranslationContext';\n/**\n * Wrapper component for a StreamChat application. Chat needs to be placed around any other chat components\n * as it provides the ChatContext.\n */\nexport var Chat = function (props) {\n    var children = props.children, client = props.client, customClasses = props.customClasses, customStyles = props.customStyles, _a = props.darkMode, darkMode = _a === void 0 ? false : _a, defaultLanguage = props.defaultLanguage, i18nInstance = props.i18nInstance, _b = props.initialNavOpen, initialNavOpen = _b === void 0 ? true : _b, _c = props.theme, theme = _c === void 0 ? 'messaging light' : _c, _d = props.useImageFlagEmojisOnWindows, useImageFlagEmojisOnWindows = _d === void 0 ? false : _d;\n    var _e = useChat({ client: client, defaultLanguage: defaultLanguage, i18nInstance: i18nInstance, initialNavOpen: initialNavOpen }), channel = _e.channel, closeMobileNav = _e.closeMobileNav, getAppSettings = _e.getAppSettings, latestMessageDatesByChannels = _e.latestMessageDatesByChannels, mutes = _e.mutes, navOpen = _e.navOpen, openMobileNav = _e.openMobileNav, setActiveChannel = _e.setActiveChannel, translators = _e.translators;\n    var channelsQueryState = useChannelsQueryState();\n    var themeVersion = (getComputedStyle(document.documentElement)\n        .getPropertyValue('--str-chat__theme-version')\n        .replace(' ', '') || '1');\n    useCustomStyles(darkMode ? darkModeTheme : customStyles);\n    var chatContextValue = useCreateChatContext({\n        channel: channel,\n        channelsQueryState: channelsQueryState,\n        client: client,\n        closeMobileNav: closeMobileNav,\n        customClasses: customClasses,\n        getAppSettings: getAppSettings,\n        latestMessageDatesByChannels: latestMessageDatesByChannels,\n        mutes: mutes,\n        navOpen: navOpen,\n        openMobileNav: openMobileNav,\n        setActiveChannel: setActiveChannel,\n        theme: theme,\n        themeVersion: themeVersion,\n        useImageFlagEmojisOnWindows: useImageFlagEmojisOnWindows,\n    });\n    if (!translators.t)\n        return null;\n    return (React.createElement(ChatProvider, { value: chatContextValue },\n        React.createElement(TranslationProvider, { value: translators }, children)));\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,yBAA/C;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,IAAI,GAAG,UAAUC,KAAV,EAAiB;EAC/B,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;EAAA,IAA+BC,MAAM,GAAGF,KAAK,CAACE,MAA9C;EAAA,IAAsDC,aAAa,GAAGH,KAAK,CAACG,aAA5E;EAAA,IAA2FC,YAAY,GAAGJ,KAAK,CAACI,YAAhH;EAAA,IAA8HC,EAAE,GAAGL,KAAK,CAACM,QAAzI;EAAA,IAAmJA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAAtL;EAAA,IAA0LE,eAAe,GAAGP,KAAK,CAACO,eAAlN;EAAA,IAAmOC,YAAY,GAAGR,KAAK,CAACQ,YAAxP;EAAA,IAAsQC,EAAE,GAAGT,KAAK,CAACU,cAAjR;EAAA,IAAiSA,cAAc,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAzU;EAAA,IAA6UE,EAAE,GAAGX,KAAK,CAACY,KAAxV;EAAA,IAA+VA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,iBAAhB,GAAoCA,EAA3Y;EAAA,IAA+YE,EAAE,GAAGb,KAAK,CAACc,2BAA1Z;EAAA,IAAubA,2BAA2B,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA7e;;EACA,IAAIE,EAAE,GAAGvB,OAAO,CAAC;IAAEU,MAAM,EAAEA,MAAV;IAAkBK,eAAe,EAAEA,eAAnC;IAAoDC,YAAY,EAAEA,YAAlE;IAAgFE,cAAc,EAAEA;EAAhG,CAAD,CAAhB;EAAA,IAAoIM,OAAO,GAAGD,EAAE,CAACC,OAAjJ;EAAA,IAA0JC,cAAc,GAAGF,EAAE,CAACE,cAA9K;EAAA,IAA8LC,cAAc,GAAGH,EAAE,CAACG,cAAlN;EAAA,IAAkOC,4BAA4B,GAAGJ,EAAE,CAACI,4BAApQ;EAAA,IAAkSC,KAAK,GAAGL,EAAE,CAACK,KAA7S;EAAA,IAAoTC,OAAO,GAAGN,EAAE,CAACM,OAAjU;EAAA,IAA0UC,aAAa,GAAGP,EAAE,CAACO,aAA7V;EAAA,IAA4WC,gBAAgB,GAAGR,EAAE,CAACQ,gBAAlY;EAAA,IAAoZC,WAAW,GAAGT,EAAE,CAACS,WAAra;;EACA,IAAIC,kBAAkB,GAAG/B,qBAAqB,EAA9C;EACA,IAAIgC,YAAY,GAAIC,gBAAgB,CAACC,QAAQ,CAACC,eAAV,CAAhB,CACfC,gBADe,CACE,2BADF,EAEfC,OAFe,CAEP,GAFO,EAEF,EAFE,KAEK,GAFzB;EAGAnC,eAAe,CAACU,QAAQ,GAAGX,aAAH,GAAmBS,YAA5B,CAAf;EACA,IAAI4B,gBAAgB,GAAGvC,oBAAoB,CAAC;IACxCuB,OAAO,EAAEA,OAD+B;IAExCS,kBAAkB,EAAEA,kBAFoB;IAGxCvB,MAAM,EAAEA,MAHgC;IAIxCe,cAAc,EAAEA,cAJwB;IAKxCd,aAAa,EAAEA,aALyB;IAMxCe,cAAc,EAAEA,cANwB;IAOxCC,4BAA4B,EAAEA,4BAPU;IAQxCC,KAAK,EAAEA,KARiC;IASxCC,OAAO,EAAEA,OAT+B;IAUxCC,aAAa,EAAEA,aAVyB;IAWxCC,gBAAgB,EAAEA,gBAXsB;IAYxCX,KAAK,EAAEA,KAZiC;IAaxCc,YAAY,EAAEA,YAb0B;IAcxCZ,2BAA2B,EAAEA;EAdW,CAAD,CAA3C;EAgBA,IAAI,CAACU,WAAW,CAACS,CAAjB,EACI,OAAO,IAAP;EACJ,OAAQ1C,KAAK,CAAC2C,aAAN,CAAoBrC,YAApB,EAAkC;IAAEsC,KAAK,EAAEH;EAAT,CAAlC,EACJzC,KAAK,CAAC2C,aAAN,CAAoBpC,mBAApB,EAAyC;IAAEqC,KAAK,EAAEX;EAAT,CAAzC,EAAiEvB,QAAjE,CADI,CAAR;AAEH,CA5BM"},"metadata":{},"sourceType":"module"}