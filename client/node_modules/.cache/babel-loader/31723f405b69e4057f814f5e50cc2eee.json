{"ast":null,"code":"var _jsxFileName = \"/home/betty/web-app-practice/memory-game/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport SingleCard from './components/SingleCard.js';\nimport { StreamChat } from \"stream-chat\";\nimport { Chat } from 'stream-chat-react';\nimport Cookies from \"universal-cookie\";\nimport JoinGame from './components/JoinGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const api_key = process.env.REACT_APP_MY_API_KEY;\n  const cookies = new Cookies();\n  const token = cookies.get(\"token\");\n  const client = StreamChat.getInstance(api_key);\n  const [isAuth, setIsAuth] = useState(false);\n\n  const logOut = () => {\n    cookies.remove(\"token\");\n    cookies.remove(\"userId\");\n    cookies.remove(\"firstName\");\n    cookies.remove(\"lastName\");\n    cookies.remove(\"hashedPassword\");\n    cookies.remove(\"channelName\");\n    cookies.remove(\"username\");\n    client.disconnectUser();\n    setIsAuth(false);\n  };\n\n  useEffect(() => {\n    if (token) {\n      client.connectUser({\n        id: cookies.get(\"userId\"),\n        name: cookies.get(\"username\"),\n        firstName: cookies.get(\"firstName\"),\n        lastName: cookies.get(\"lastName\"),\n        hashedPassword: cookies.get(\"hashedPassword\")\n      }, token).then(user => {\n        setIsAuth(true);\n      });\n    }\n  }, []); // shuffle the cards \n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  }; // handle a choice\n\n\n  const handleChoice = card => {\n    var _choiceOne, _choiceOne2;\n\n    console.log((_choiceOne = choiceOne) === null || _choiceOne === void 0 ? void 0 : _choiceOne.id);\n    if (card.id === ((_choiceOne2 = choiceOne) === null || _choiceOne2 === void 0 ? void 0 : _choiceOne2.id)) return;\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  }; //compare the two selected cards\n\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return { ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  console.log(cards);\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched,\n        disabled: disabled\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Turns:\", turns]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Fs2kYx6qxYza36nV/MCHEP1C8nk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Login","SignUp","SingleCard","StreamChat","Chat","Cookies","JoinGame","App","api_key","process","env","REACT_APP_MY_API_KEY","cookies","token","get","client","getInstance","isAuth","setIsAuth","logOut","remove","disconnectUser","connectUser","id","name","firstName","lastName","hashedPassword","then","user","shuffleCards","shuffledCards","cardImages","sort","Math","random","map","card","setChoiceOne","setChoiceTwo","setCards","setTurns","handleChoice","console","log","choiceOne","choiceTwo","setDisabled","src","prevCards","matched","resetTurn","setTimeout","cards","prevTurns","disabled","turns"],"sources":["/home/betty/web-app-practice/memory-game/client/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport SingleCard from './components/SingleCard.js'\nimport { StreamChat} from \"stream-chat\";\nimport {Chat} from 'stream-chat-react';\nimport Cookies from \"universal-cookie\";\nimport JoinGame from './components/JoinGame';\n\n\n\n\nfunction App() {\n  \n  \n  const api_key = process.env.REACT_APP_MY_API_KEY\n  const cookies = new Cookies();\n  const token = cookies.get(\"token\");\n  const client = StreamChat.getInstance(api_key);\n  const [isAuth, setIsAuth] = useState(false);\n\n  const logOut = () => {\n    cookies.remove(\"token\");\n    cookies.remove(\"userId\");\n    cookies.remove(\"firstName\");\n    cookies.remove(\"lastName\");\n    cookies.remove(\"hashedPassword\");\n    cookies.remove(\"channelName\");\n    cookies.remove(\"username\");\n    client.disconnectUser();\n    setIsAuth(false)\n  };\n\nuseEffect(() => {\n  if (token) {\n    client.connectUser({\n      id: cookies.get(\"userId\"),\n      name: cookies.get(\"username\"),\n      firstName: cookies.get(\"firstName\"),\n      lastName: cookies.get(\"lastName\"),\n      hashedPassword: cookies.get(\"hashedPassword\"),\n    },\n    token\n  ).then((user) => {\n    setIsAuth(true);\n  })\n  }\n}, []);\n\n\n\n\n  // shuffle the cards \n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({...card, id: Math.random()}))\n\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n// handle a choice\nconst handleChoice = (card) => {\n  console.log(choiceOne?.id)\n  if (card.id === choiceOne?.id) return;\n  choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  \n}\n\n//compare the two selected cards\nuseEffect (() => {\n  \n  if (choiceOne && choiceTwo) {\n      setDisabled(true)\n    if (choiceOne.src === choiceTwo.src) {\n      setCards(prevCards => {\n        return prevCards.map(card => {\n          if (card.src === choiceOne.src) {\n            return {...card, matched:true}\n          } else {\n            return card\n          }\n        })\n      })\n      resetTurn()\n    } else{\n      \n      setTimeout(() => resetTurn(), 1000)\n    }\n  }\n\n}, [choiceOne, choiceTwo])\n\nconsole.log(cards)\n\nuseEffect (() => {\n  shuffleCards()\n}, [])\n\nconst resetTurn = () => {\n  setChoiceOne(null)\n  setChoiceTwo(null)\n  setTurns(prevTurns => prevTurns + 1)\n  setDisabled(false)\n}\n   \n  return (\n    <div className=\"app\">\n     <h1>Memory Game</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className='card-grid'>\n        {cards.map(card => (\n        <SingleCard \n        key={card.id} \n        card={card}\n        handleChoice={handleChoice}\n        flipped = {card === choiceOne || card === choiceTwo || card.matched}\n        disabled = {disabled}\n        />\n        ))}\n\n      </div>\n      <p>Turns:{turns}</p>\n      {/* {isAuth ? (\n        <Chat client={client}>\n        <JoinGame   />\n      <button onClick={logOut}>Log out</button> \n      </Chat>\n      \n      ) : ( \n      <>\n      <SignUp setIsAuth={setIsAuth} />\n      <Login setIsAuth={setIsAuth} />\n      </>\n      )} */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}