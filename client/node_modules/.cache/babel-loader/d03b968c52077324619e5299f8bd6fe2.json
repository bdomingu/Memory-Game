{"ast":null,"code":"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { DeliveredCheckIcon, MessageDeliveredIcon } from './icons';\nimport { getReadByTooltipText, mapToUserNameOrId } from './utils';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { LoadingIndicator } from '../Loading';\nimport { PopperTooltip, Tooltip } from '../Tooltip';\nimport { useEnterLeaveHandlers } from '../Tooltip/hooks';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\n\nvar UnMemoizedMessageStatus = function (props) {\n  var _a;\n\n  var propAvatar = props.Avatar,\n      _b = props.messageType,\n      messageType = _b === void 0 ? 'simple' : _b,\n      _c = props.tooltipUserNameMapper,\n      tooltipUserNameMapper = _c === void 0 ? mapToUserNameOrId : _c;\n\n  var _d = useEnterLeaveHandlers(),\n      handleEnter = _d.handleEnter,\n      handleLeave = _d.handleLeave,\n      tooltipVisible = _d.tooltipVisible;\n\n  var client = useChatContext('MessageStatus').client;\n  var contextAvatar = useComponentContext('MessageStatus').Avatar;\n\n  var _e = useMessageContext('MessageStatus'),\n      isMyMessage = _e.isMyMessage,\n      lastReceivedId = _e.lastReceivedId,\n      message = _e.message,\n      readBy = _e.readBy,\n      threadList = _e.threadList;\n\n  var t = useTranslationContext('MessageStatus').t;\n  var themeVersion = useChatContext('MessageStatus').themeVersion;\n\n  var _f = useState(null),\n      referenceElement = _f[0],\n      setReferenceElement = _f[1];\n\n  var Avatar = propAvatar || contextAvatar || DefaultAvatar;\n  if (!isMyMessage() || message.type === 'error') return null;\n  var justReadByMe = (readBy === null || readBy === void 0 ? void 0 : readBy.length) === 1 && readBy[0].id === ((_a = client.user) === null || _a === void 0 ? void 0 : _a.id);\n  var rootClassName = \"str-chat__message-\".concat(messageType, \"-status str-chat__message-status\");\n  var sending = message.status === 'sending';\n  var delivered = message.status === 'received' && message.id === lastReceivedId && !threadList;\n  var deliveredAndRead = !!((readBy === null || readBy === void 0 ? void 0 : readBy.length) && !threadList && !justReadByMe);\n  var lastReadUser = (deliveredAndRead ? readBy.filter(function (item) {\n    var _a;\n\n    return item.id !== ((_a = client.user) === null || _a === void 0 ? void 0 : _a.id);\n  }) : [])[0];\n  return React.createElement(\"span\", {\n    className: rootClassName,\n    \"data-testid\": clsx({\n      'message-status-read-by': deliveredAndRead,\n      'message-status-received': delivered && !deliveredAndRead,\n      'message-status-sending': sending\n    }),\n    onMouseEnter: handleEnter,\n    onMouseLeave: handleLeave,\n    ref: setReferenceElement\n  }, sending && React.createElement(React.Fragment, null, themeVersion === '1' && React.createElement(Tooltip, null, t('Sending...')), themeVersion === '2' && React.createElement(PopperTooltip, {\n    offset: [0, 5],\n    referenceElement: referenceElement,\n    visible: tooltipVisible\n  }, t('Sending...')), React.createElement(LoadingIndicator, null)), delivered && !deliveredAndRead && React.createElement(React.Fragment, null, themeVersion === '1' && React.createElement(Tooltip, null, t('Delivered')), themeVersion === '2' && React.createElement(PopperTooltip, {\n    offset: [0, 5],\n    referenceElement: referenceElement,\n    visible: tooltipVisible\n  }, t('Delivered')), themeVersion === '2' ? React.createElement(MessageDeliveredIcon, null) : React.createElement(DeliveredCheckIcon, null)), deliveredAndRead && React.createElement(React.Fragment, null, themeVersion === '1' && React.createElement(Tooltip, null, getReadByTooltipText(readBy, t, client, tooltipUserNameMapper)), themeVersion === '2' && React.createElement(PopperTooltip, {\n    offset: [0, 5],\n    referenceElement: referenceElement,\n    visible: tooltipVisible\n  }, getReadByTooltipText(readBy, t, client, tooltipUserNameMapper)), React.createElement(Avatar, {\n    image: lastReadUser.image,\n    name: lastReadUser.name || lastReadUser.id,\n    size: 15,\n    user: lastReadUser\n  }), readBy.length > 2 && React.createElement(\"span\", {\n    className: \"str-chat__message-\".concat(messageType, \"-status-number\"),\n    \"data-testid\": 'message-status-read-by-many'\n  }, readBy.length - 1)));\n};\n\nexport var MessageStatus = React.memo(UnMemoizedMessageStatus);","map":{"version":3,"names":["React","useState","clsx","DeliveredCheckIcon","MessageDeliveredIcon","getReadByTooltipText","mapToUserNameOrId","Avatar","DefaultAvatar","LoadingIndicator","PopperTooltip","Tooltip","useEnterLeaveHandlers","useChatContext","useComponentContext","useMessageContext","useTranslationContext","UnMemoizedMessageStatus","props","_a","propAvatar","_b","messageType","_c","tooltipUserNameMapper","_d","handleEnter","handleLeave","tooltipVisible","client","contextAvatar","_e","isMyMessage","lastReceivedId","message","readBy","threadList","t","themeVersion","_f","referenceElement","setReferenceElement","type","justReadByMe","length","id","user","rootClassName","concat","sending","status","delivered","deliveredAndRead","lastReadUser","filter","item","createElement","className","onMouseEnter","onMouseLeave","ref","Fragment","offset","visible","image","name","size","MessageStatus","memo"],"sources":["/home/betty/web-app-practice/memory-game/client/node_modules/stream-chat-react/dist/components/Message/MessageStatus.js"],"sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { DeliveredCheckIcon, MessageDeliveredIcon } from './icons';\nimport { getReadByTooltipText, mapToUserNameOrId } from './utils';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { LoadingIndicator } from '../Loading';\nimport { PopperTooltip, Tooltip } from '../Tooltip';\nimport { useEnterLeaveHandlers } from '../Tooltip/hooks';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nvar UnMemoizedMessageStatus = function (props) {\n    var _a;\n    var propAvatar = props.Avatar, _b = props.messageType, messageType = _b === void 0 ? 'simple' : _b, _c = props.tooltipUserNameMapper, tooltipUserNameMapper = _c === void 0 ? mapToUserNameOrId : _c;\n    var _d = useEnterLeaveHandlers(), handleEnter = _d.handleEnter, handleLeave = _d.handleLeave, tooltipVisible = _d.tooltipVisible;\n    var client = useChatContext('MessageStatus').client;\n    var contextAvatar = useComponentContext('MessageStatus').Avatar;\n    var _e = useMessageContext('MessageStatus'), isMyMessage = _e.isMyMessage, lastReceivedId = _e.lastReceivedId, message = _e.message, readBy = _e.readBy, threadList = _e.threadList;\n    var t = useTranslationContext('MessageStatus').t;\n    var themeVersion = useChatContext('MessageStatus').themeVersion;\n    var _f = useState(null), referenceElement = _f[0], setReferenceElement = _f[1];\n    var Avatar = propAvatar || contextAvatar || DefaultAvatar;\n    if (!isMyMessage() || message.type === 'error')\n        return null;\n    var justReadByMe = (readBy === null || readBy === void 0 ? void 0 : readBy.length) === 1 && readBy[0].id === ((_a = client.user) === null || _a === void 0 ? void 0 : _a.id);\n    var rootClassName = \"str-chat__message-\".concat(messageType, \"-status str-chat__message-status\");\n    var sending = message.status === 'sending';\n    var delivered = message.status === 'received' && message.id === lastReceivedId && !threadList;\n    var deliveredAndRead = !!((readBy === null || readBy === void 0 ? void 0 : readBy.length) && !threadList && !justReadByMe);\n    var lastReadUser = (deliveredAndRead\n        ? readBy.filter(function (item) { var _a; return item.id !== ((_a = client.user) === null || _a === void 0 ? void 0 : _a.id); })\n        : [])[0];\n    return (React.createElement(\"span\", { className: rootClassName, \"data-testid\": clsx({\n            'message-status-read-by': deliveredAndRead,\n            'message-status-received': delivered && !deliveredAndRead,\n            'message-status-sending': sending,\n        }), onMouseEnter: handleEnter, onMouseLeave: handleLeave, ref: setReferenceElement },\n        sending && (React.createElement(React.Fragment, null,\n            themeVersion === '1' && React.createElement(Tooltip, null, t('Sending...')),\n            themeVersion === '2' && (React.createElement(PopperTooltip, { offset: [0, 5], referenceElement: referenceElement, visible: tooltipVisible }, t('Sending...'))),\n            React.createElement(LoadingIndicator, null))),\n        delivered && !deliveredAndRead && (React.createElement(React.Fragment, null,\n            themeVersion === '1' && React.createElement(Tooltip, null, t('Delivered')),\n            themeVersion === '2' && (React.createElement(PopperTooltip, { offset: [0, 5], referenceElement: referenceElement, visible: tooltipVisible }, t('Delivered'))),\n            themeVersion === '2' ? React.createElement(MessageDeliveredIcon, null) : React.createElement(DeliveredCheckIcon, null))),\n        deliveredAndRead && (React.createElement(React.Fragment, null,\n            themeVersion === '1' && (React.createElement(Tooltip, null, getReadByTooltipText(readBy, t, client, tooltipUserNameMapper))),\n            themeVersion === '2' && (React.createElement(PopperTooltip, { offset: [0, 5], referenceElement: referenceElement, visible: tooltipVisible }, getReadByTooltipText(readBy, t, client, tooltipUserNameMapper))),\n            React.createElement(Avatar, { image: lastReadUser.image, name: lastReadUser.name || lastReadUser.id, size: 15, user: lastReadUser }),\n            readBy.length > 2 && (React.createElement(\"span\", { className: \"str-chat__message-\".concat(messageType, \"-status-number\"), \"data-testid\": 'message-status-read-by-many' }, readBy.length - 1))))));\n};\nexport var MessageStatus = React.memo(UnMemoizedMessageStatus);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}