{"ast":null,"code":"var _jsxFileName = \"/home/betty/web-app-practice/memory-game/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport SingleCard from './SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/images/img1.jpg\",\n  matched: false\n}, {\n  \"src\": \"/images/img2.jpg\",\n  matched: false\n}, {\n  \"src\": \"/images/img3.jpg\",\n  matched: false\n}, {\n  \"src\": \"/images/img4.jpeg\",\n  matched: false\n}, {\n  \"src\": \"/images/img5.jpg\",\n  matched: false\n}, {\n  \"src\": \"/images/img6.jpg\",\n  matched: false\n}];\n\nfunction Board() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [player, setPlayer] = useState('1');\n  const [turn, setTurn] = useState('1');\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards); // setTurns(0)\n  }; // handle a choice\n\n\n  const handleChoice = card => {\n    if (card.id === (choiceOne === null || choiceOne === void 0 ? void 0 : choiceOne.id)) return;\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  }; //compare the two selected cards\n\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setTurn(player === '1' ? '2' : '1');\n      console.log(turn);\n      setDisabled(true);\n\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return { ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null); //   setTurns(prevTurns => prevTurns + 1)\n\n    setDisabled(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched,\n        disabled: disabled\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"BBKXaFnyhRg63kz+JmfeuXO6skY=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useEffect","useState","SingleCard","cardImages","matched","Board","cards","setCards","player","setPlayer","turn","setTurn","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","console","log","src","prevCards","resetTurn","setTimeout"],"sources":["/home/betty/web-app-practice/memory-game/client/src/components/Board.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport SingleCard from './SingleCard';\n\nconst cardImages = [\n    {\"src\": \"/images/img1.jpg\", matched: false},\n    {\"src\": \"/images/img2.jpg\", matched: false},\n    {\"src\": \"/images/img3.jpg\", matched: false},\n    {\"src\": \"/images/img4.jpeg\", matched: false},\n    {\"src\": \"/images/img5.jpg\", matched: false},\n    {\"src\": \"/images/img6.jpg\", matched: false}\n  ]\n\nfunction Board() {\n    const [cards, setCards] = useState([])\n    const [player, setPlayer] = useState('1')\n    const [turn, setTurn] = useState('1')\n    const [choiceOne, setChoiceOne] = useState(null)\n    const [choiceTwo, setChoiceTwo] = useState(null)\n    const [disabled, setDisabled] = useState(false)\n\n    const shuffleCards = () => {\n        const shuffledCards = [...cardImages, ...cardImages]\n          .sort(() => Math.random() - 0.5)\n          .map((card) => ({...card, id: Math.random()}))\n    \n        setChoiceOne(null)\n        setChoiceTwo(null)\n        setCards(shuffledCards)\n        // setTurns(0)\n      }\n    \n    // handle a choice\n    const handleChoice = (card) => {\n     if (card.id === choiceOne?.id) return;\n      choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n      \n    }\n   \n    \n    //compare the two selected cards\n    useEffect (() => {\n      \n      if (choiceOne && choiceTwo) {\n        setTurn(player === '1' ? '2' : '1')\n        console.log(turn)\n          setDisabled(true)\n        if (choiceOne.src === choiceTwo.src) {\n          setCards(prevCards => {\n            return prevCards.map(card => {\n              if (card.src === choiceOne.src) {\n                return {...card, matched:true}\n              } else {\n                return card\n              }\n            })\n          })\n          resetTurn()\n        } else{\n          \n          setTimeout(() => resetTurn(), 1000)\n        }\n        \n\n      }\n    \n    }, [choiceOne, choiceTwo])\n    \n useEffect (() => {\n      shuffleCards()\n    }, [])\n    \n    const resetTurn = () => {\n      setChoiceOne(null)\n      setChoiceTwo(null)\n    //   setTurns(prevTurns => prevTurns + 1)\n      setDisabled(false)\n    }\n  return (\n    <div className=\"app\">\n    <h1>Memory Game</h1>\n     <button onClick={shuffleCards}>New Game</button>\n\n     <div className='card-grid'>\n       {cards.map(card => (\n       <SingleCard \n       key={card.id} \n       card={card}\n       handleChoice={handleChoice}\n       flipped = {card === choiceOne || card === choiceTwo || card.matched}\n       disabled = {disabled}\n       />\n       ))}\n\n     </div>\n     {/* <p>Turns:{turns}</p> */}\n    \n    </div>\n  )\n}\n\nexport default Board\n\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}