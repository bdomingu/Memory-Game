{"ast":null,"code":"var _jsxFileName = \"/home/betty/web-app-practice/memory-game/client/src/components/JoinGame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useChatContext, Channel } from 'stream-chat-react';\nimport Game from './Game';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction JoinGame() {\n  _s();\n\n  const [rivalUsername, setRivalUsername] = useState('');\n  const {\n    client\n  } = useChatContext();\n  const [channel, setChannel] = useState(null);\n\n  const createChannel = async () => {\n    const response = await client.queryUsers({\n      name: {\n        $eq: rivalUsername\n      }\n    });\n\n    if (response.users.length === 0) {\n      alert(\"User not found\");\n      return;\n    }\n\n    const newChannel = await client.channel(\"messaging\", {\n      members: [client.userID, response.users[0].id]\n    });\n    await newChannel.watch();\n    setChannel(newChannel);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: channel ? /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this) // <Channel channel={channel}>\n    // <Game channel={channel}/>\n    // </Channel> \n    : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinGame\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Create Game \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username of rival...\",\n        onChange: event => {\n          setRivalUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createChannel,\n        children: \"Join/Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(JoinGame, \"oSK2tWeUf3QAZLy6CGjNHmoVrus=\", false, function () {\n  return [useChatContext];\n});\n\n_c = JoinGame;\nexport default JoinGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"JoinGame\");","map":{"version":3,"names":["React","useState","useChatContext","Channel","Game","JoinGame","rivalUsername","setRivalUsername","client","channel","setChannel","createChannel","response","queryUsers","name","$eq","users","length","alert","newChannel","members","userID","id","watch","event","target","value"],"sources":["/home/betty/web-app-practice/memory-game/client/src/components/JoinGame.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {useChatContext, Channel} from 'stream-chat-react';\nimport Game from './Game';\n\nfunction JoinGame() {\n  const [rivalUsername, setRivalUsername] = useState('')\n  const {client} = useChatContext()\n  const [channel, setChannel] = useState(null)\n\n  const createChannel = async () => {\n    const response = await client.queryUsers({name: {$eq: rivalUsername}});\n\n    if (response.users.length === 0){\n      alert(\"User not found\")\n      return\n    }\n\n    const newChannel = await client.channel(\"messaging\", {\n      members: [client.userID, response.users[0].id],\n    });\n    await newChannel.watch()\n    setChannel(newChannel);\n  }\n\n  return (\n   <>\n    {channel ? (\n      <Game />\n    // <Channel channel={channel}>\n    // <Game channel={channel}/>\n    // </Channel> \n    ): (\n    <div className='joinGame'>\n      <h4>Create Game </h4>\n      <input \n      placeholder='Username of rival...' \n      onChange={(event) => {setRivalUsername(event.target.value)}} \n\n      />\n      <button onClick={createChannel}>Join/Start Game</button>\n    </div>\n    )\n    }\n  </>\n\n  );\n}\n\nexport default JoinGame;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,cAAR,EAAwBC,OAAxB,QAAsC,mBAAtC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM;IAACO;EAAD,IAAWN,cAAc,EAA/B;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;;EAEA,MAAMU,aAAa,GAAG,YAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACK,UAAP,CAAkB;MAACC,IAAI,EAAE;QAACC,GAAG,EAAET;MAAN;IAAP,CAAlB,CAAvB;;IAEA,IAAIM,QAAQ,CAACI,KAAT,CAAeC,MAAf,KAA0B,CAA9B,EAAgC;MAC9BC,KAAK,CAAC,gBAAD,CAAL;MACA;IACD;;IAED,MAAMC,UAAU,GAAG,MAAMX,MAAM,CAACC,OAAP,CAAe,WAAf,EAA4B;MACnDW,OAAO,EAAE,CAACZ,MAAM,CAACa,MAAR,EAAgBT,QAAQ,CAACI,KAAT,CAAe,CAAf,EAAkBM,EAAlC;IAD0C,CAA5B,CAAzB;IAGA,MAAMH,UAAU,CAACI,KAAX,EAAN;IACAb,UAAU,CAACS,UAAD,CAAV;EACD,CAbD;;EAeA,oBACC;IAAA,UACEV,OAAO,gBACN,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QADM,CAER;IACA;IACA;IAJQ,eAMR;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACA,WAAW,EAAC,sBADZ;QAEA,QAAQ,EAAGe,KAAD,IAAW;UAACjB,gBAAgB,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;QAAqC;MAF3D;QAAA;QAAA;QAAA;MAAA,QAFF,eAOE;QAAQ,OAAO,EAAEf,aAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EAPD,iBADD;AAsBD;;GA1CQN,Q;UAEUH,c;;;KAFVG,Q;AA4CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}