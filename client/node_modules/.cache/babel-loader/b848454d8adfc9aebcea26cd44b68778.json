{"ast":null,"code":"var _jsxFileName = \"/home/betty/web-app-practice/memory-game/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport SingleCard from './components/SingleCard.js';\nimport { StreamChat } from \"stream-chat\";\nimport { Chat } from 'stream-chat-react';\nimport Cookies from \"universal-cookie\";\nimport JoinGame from './components/JoinGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const api_key = process.env.REACT_APP_MY_API_KEY;\n  const cookies = new Cookies();\n  const token = cookies.get(\"token\");\n  const client = StreamChat.getInstance(api_key);\n  const [isAuth, setIsAuth] = useState(false);\n\n  const logOut = () => {\n    cookies.remove(\"token\");\n    cookies.remove(\"userId\");\n    cookies.remove(\"firstName\");\n    cookies.remove(\"lastName\");\n    cookies.remove(\"hashedPassword\");\n    cookies.remove(\"channelName\");\n    cookies.remove(\"username\");\n    client.disconnectUser();\n    setIsAuth(false);\n  };\n\n  useEffect(() => {\n    if (token) {\n      client.connectUser({\n        id: cookies.get(\"userId\"),\n        name: cookies.get(\"username\"),\n        firstName: cookies.get(\"firstName\"),\n        lastName: cookies.get(\"lastName\"),\n        hashedPassword: cookies.get(\"hashedPassword\")\n      }, token).then(user => {\n        setIsAuth(true);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched,\n        disabled: disabled\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Turns:\", turns]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"t4PKgZRiujzx2FYwcAdbmygk8hU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Login","SignUp","SingleCard","StreamChat","Chat","Cookies","JoinGame","App","api_key","process","env","REACT_APP_MY_API_KEY","cookies","token","get","client","getInstance","isAuth","setIsAuth","logOut","remove","disconnectUser","connectUser","id","name","firstName","lastName","hashedPassword","then","user","shuffleCards","cards","map","card","handleChoice","choiceOne","choiceTwo","matched","disabled","turns"],"sources":["/home/betty/web-app-practice/memory-game/client/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport SingleCard from './components/SingleCard.js'\nimport { StreamChat} from \"stream-chat\";\nimport {Chat} from 'stream-chat-react';\nimport Cookies from \"universal-cookie\";\nimport JoinGame from './components/JoinGame';\n\n\n\n\nfunction App() {\n  \n  \n  const api_key = process.env.REACT_APP_MY_API_KEY\n  const cookies = new Cookies();\n  const token = cookies.get(\"token\");\n  const client = StreamChat.getInstance(api_key);\n  const [isAuth, setIsAuth] = useState(false);\n\n  const logOut = () => {\n    cookies.remove(\"token\");\n    cookies.remove(\"userId\");\n    cookies.remove(\"firstName\");\n    cookies.remove(\"lastName\");\n    cookies.remove(\"hashedPassword\");\n    cookies.remove(\"channelName\");\n    cookies.remove(\"username\");\n    client.disconnectUser();\n    setIsAuth(false)\n  };\n\nuseEffect(() => {\n  if (token) {\n    client.connectUser({\n      id: cookies.get(\"userId\"),\n      name: cookies.get(\"username\"),\n      firstName: cookies.get(\"firstName\"),\n      lastName: cookies.get(\"lastName\"),\n      hashedPassword: cookies.get(\"hashedPassword\"),\n    },\n    token\n  ).then((user) => {\n    setIsAuth(true);\n  })\n  }\n}, []);\n\n\n\n\n  \n   \n  return (\n    <div className=\"app\">\n     <h1>Memory Game</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className='card-grid'>\n        {cards.map(card => (\n        <SingleCard \n        key={card.id} \n        card={card}\n        handleChoice={handleChoice}\n        flipped = {card === choiceOne || card === choiceTwo || card.matched}\n        disabled = {disabled}\n        />\n        ))}\n\n      </div>\n      <p>Turns:{turns}</p>\n      {/* {isAuth ? (\n        <Chat client={client}>\n        <JoinGame   />\n      <button onClick={logOut}>Log out</button> \n      </Chat>\n      \n      ) : ( \n      <>\n      <SignUp setIsAuth={setIsAuth} />\n      <Login setIsAuth={setIsAuth} />\n      </>\n      // )} */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,UAAT,QAA0B,aAA1B;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAKA,SAASC,GAAT,GAAe;EAAA;;EAGb,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA5B;EACA,MAAMC,OAAO,GAAG,IAAIP,OAAJ,EAAhB;EACA,MAAMQ,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAd;EACA,MAAMC,MAAM,GAAGZ,UAAU,CAACa,WAAX,CAAuBR,OAAvB,CAAf;EACA,MAAM,CAACS,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;;EAEA,MAAMoB,MAAM,GAAG,MAAM;IACnBP,OAAO,CAACQ,MAAR,CAAe,OAAf;IACAR,OAAO,CAACQ,MAAR,CAAe,QAAf;IACAR,OAAO,CAACQ,MAAR,CAAe,WAAf;IACAR,OAAO,CAACQ,MAAR,CAAe,UAAf;IACAR,OAAO,CAACQ,MAAR,CAAe,gBAAf;IACAR,OAAO,CAACQ,MAAR,CAAe,aAAf;IACAR,OAAO,CAACQ,MAAR,CAAe,UAAf;IACAL,MAAM,CAACM,cAAP;IACAH,SAAS,CAAC,KAAD,CAAT;EACD,CAVD;;EAYFpB,SAAS,CAAC,MAAM;IACd,IAAIe,KAAJ,EAAW;MACTE,MAAM,CAACO,WAAP,CAAmB;QACjBC,EAAE,EAAEX,OAAO,CAACE,GAAR,CAAY,QAAZ,CADa;QAEjBU,IAAI,EAAEZ,OAAO,CAACE,GAAR,CAAY,UAAZ,CAFW;QAGjBW,SAAS,EAAEb,OAAO,CAACE,GAAR,CAAY,WAAZ,CAHM;QAIjBY,QAAQ,EAAEd,OAAO,CAACE,GAAR,CAAY,UAAZ,CAJO;QAKjBa,cAAc,EAAEf,OAAO,CAACE,GAAR,CAAY,gBAAZ;MALC,CAAnB,EAOAD,KAPA,EAQAe,IARA,CAQMC,IAAD,IAAU;QACfX,SAAS,CAAC,IAAD,CAAT;MACD,CAVC;IAWD;EACF,CAdQ,EAcN,EAdM,CAAT;EAqBE,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAEE;MAAQ,OAAO,EAAEY,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE;MAAK,SAAS,EAAC,WAAf;MAAA,UACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACf,QAAC,UAAD;QAEA,IAAI,EAAEA,IAFN;QAGA,YAAY,EAAEC,YAHd;QAIA,OAAO,EAAID,IAAI,KAAKE,SAAT,IAAsBF,IAAI,KAAKG,SAA/B,IAA4CH,IAAI,CAACI,OAJ5D;QAKA,QAAQ,EAAIC;MALZ,GACKL,IAAI,CAACV,EADV;QAAA;QAAA;QAAA;MAAA,QADC;IADH;MAAA;MAAA;MAAA;IAAA,QAJF,eAgBE;MAAA,qBAAUgB,KAAV;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD;;GA1EQhC,G;;KAAAA,G;AA4ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}