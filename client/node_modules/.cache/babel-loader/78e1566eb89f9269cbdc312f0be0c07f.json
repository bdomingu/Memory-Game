{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useContext } from 'react'; //@ts-expect-error\n\nimport DefaultEmojiIndex from 'emoji-mart/dist/utils/emoji-index/nimble-emoji-index.js';\nvar DefaultEmoji = React.lazy(function () {\n  return import('./DefaultEmoji');\n});\nvar DefaultEmojiPicker = React.lazy(function () {\n  return import('./DefaultEmojiPicker');\n});\nexport var EmojiContext = React.createContext(undefined);\nexport var EmojiProvider = function (_a) {\n  var children = _a.children,\n      value = _a.value;\n  var _b = value.Emoji,\n      Emoji = _b === void 0 ? DefaultEmoji : _b,\n      emojiConfig = value.emojiConfig,\n      _c = value.EmojiIndex,\n      EmojiIndex = _c === void 0 ? DefaultEmojiIndex : _c,\n      _d = value.EmojiPicker,\n      EmojiPicker = _d === void 0 ? DefaultEmojiPicker : _d;\n  var emojiContextValue = {\n    Emoji: Emoji,\n    emojiConfig: emojiConfig,\n    EmojiIndex: EmojiIndex,\n    EmojiPicker: EmojiPicker\n  };\n  return React.createElement(EmojiContext.Provider, {\n    value: emojiContextValue\n  }, children);\n};\nexport var useEmojiContext = function (componentName) {\n  var contextValue = useContext(EmojiContext);\n\n  if (!contextValue) {\n    console.warn(\"The useEmojiContext hook was called outside of the EmojiContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the \".concat(componentName, \" component.\"));\n    return {};\n  }\n\n  return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if EmojiContext\n * typing is desired while using the HOC withEmojiContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\n\nexport var withEmojiContext = function (Component) {\n  var WithEmojiContextComponent = function (props) {\n    var componentContext = useEmojiContext();\n    return React.createElement(Component, __assign({}, props, componentContext));\n  };\n\n  WithEmojiContextComponent.displayName = (Component.displayName || Component.name || 'Component').replace('Base', '');\n  return WithEmojiContextComponent;\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useContext","DefaultEmojiIndex","DefaultEmoji","lazy","DefaultEmojiPicker","EmojiContext","createContext","undefined","EmojiProvider","_a","children","value","_b","Emoji","emojiConfig","_c","EmojiIndex","_d","EmojiPicker","emojiContextValue","createElement","Provider","useEmojiContext","componentName","contextValue","console","warn","concat","withEmojiContext","Component","WithEmojiContextComponent","props","componentContext","displayName","name","replace"],"sources":["/home/betty/web-app-practice/memory-game/client/node_modules/stream-chat-react/dist/context/EmojiContext.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useContext } from 'react';\n//@ts-expect-error\nimport DefaultEmojiIndex from 'emoji-mart/dist/utils/emoji-index/nimble-emoji-index.js';\nvar DefaultEmoji = React.lazy(function () { return import('./DefaultEmoji'); });\nvar DefaultEmojiPicker = React.lazy(function () { return import('./DefaultEmojiPicker'); });\nexport var EmojiContext = React.createContext(undefined);\nexport var EmojiProvider = function (_a) {\n    var children = _a.children, value = _a.value;\n    var _b = value.Emoji, Emoji = _b === void 0 ? DefaultEmoji : _b, emojiConfig = value.emojiConfig, _c = value.EmojiIndex, EmojiIndex = _c === void 0 ? DefaultEmojiIndex : _c, _d = value.EmojiPicker, EmojiPicker = _d === void 0 ? DefaultEmojiPicker : _d;\n    var emojiContextValue = {\n        Emoji: Emoji,\n        emojiConfig: emojiConfig,\n        EmojiIndex: EmojiIndex,\n        EmojiPicker: EmojiPicker,\n    };\n    return React.createElement(EmojiContext.Provider, { value: emojiContextValue }, children);\n};\nexport var useEmojiContext = function (componentName) {\n    var contextValue = useContext(EmojiContext);\n    if (!contextValue) {\n        console.warn(\"The useEmojiContext hook was called outside of the EmojiContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the \".concat(componentName, \" component.\"));\n        return {};\n    }\n    return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if EmojiContext\n * typing is desired while using the HOC withEmojiContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport var withEmojiContext = function (Component) {\n    var WithEmojiContextComponent = function (props) {\n        var componentContext = useEmojiContext();\n        return React.createElement(Component, __assign({}, props, componentContext));\n    };\n    WithEmojiContextComponent.displayName = (Component.displayName ||\n        Component.name ||\n        'Component').replace('Base', '');\n    return WithEmojiContextComponent;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}