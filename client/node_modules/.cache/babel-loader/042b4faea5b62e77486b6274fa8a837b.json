{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n/* eslint-disable no-continue */\n\n\nimport React, { useMemo } from 'react';\nimport { useLastReadData } from './useLastReadData';\nimport { getLastReceived } from '../utils';\nimport { CUSTOM_MESSAGE_TYPE } from '../../../constants/messageTypes';\nimport { DateSeparator as DefaultDateSeparator } from '../../DateSeparator/DateSeparator';\nimport { EventComponent } from '../../EventComponent/EventComponent';\nimport { Message } from '../../Message';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useComponentContext } from '../../../context/ComponentContext';\nimport { isDate } from '../../../context/TranslationContext';\nexport var useMessageListElements = function (props) {\n  var enrichedMessages = props.enrichedMessages,\n      internalMessageProps = props.internalMessageProps,\n      messageGroupStyles = props.messageGroupStyles,\n      onMessageLoadCaptured = props.onMessageLoadCaptured,\n      read = props.read,\n      returnAllReadData = props.returnAllReadData,\n      threadList = props.threadList;\n\n  var _a = useChatContext('useMessageListElements'),\n      client = _a.client,\n      customClasses = _a.customClasses;\n\n  var _b = useComponentContext('useMessageListElements'),\n      _c = _b.DateSeparator,\n      DateSeparator = _c === void 0 ? DefaultDateSeparator : _c,\n      HeaderComponent = _b.HeaderComponent,\n      _d = _b.MessageSystem,\n      MessageSystem = _d === void 0 ? EventComponent : _d; // get the readData, but only for messages submitted by the user themselves\n\n\n  var readData = useLastReadData({\n    messages: enrichedMessages,\n    read: read,\n    returnAllReadData: returnAllReadData,\n    userID: client.userID\n  });\n  var lastReceivedId = useMemo(function () {\n    return getLastReceived(enrichedMessages);\n  }, [enrichedMessages]);\n  var elements = useMemo(function () {\n    return enrichedMessages.map(function (message) {\n      var _a;\n\n      if (message.customType === CUSTOM_MESSAGE_TYPE.date && message.date && isDate(message.date)) {\n        return React.createElement(\"li\", {\n          key: \"\".concat(message.date.toISOString(), \"-i\")\n        }, React.createElement(DateSeparator, {\n          date: message.date,\n          formatDate: internalMessageProps.formatDate,\n          unread: message.unread\n        }));\n      }\n\n      if (message.customType === CUSTOM_MESSAGE_TYPE.intro && HeaderComponent) {\n        return React.createElement(\"li\", {\n          key: 'intro'\n        }, React.createElement(HeaderComponent, null));\n      }\n\n      if (message.type === 'system') {\n        return React.createElement(\"li\", {\n          key: ((_a = message.event) === null || _a === void 0 ? void 0 : _a.created_at) || message.created_at || ''\n        }, React.createElement(MessageSystem, {\n          message: message\n        }));\n      }\n\n      var groupStyles = messageGroupStyles[message.id] || '';\n      var messageClass = (customClasses === null || customClasses === void 0 ? void 0 : customClasses.message) || \"str-chat__li str-chat__li--\".concat(groupStyles);\n      return React.createElement(\"li\", {\n        className: messageClass,\n        \"data-message-id\": message.id,\n        \"data-testid\": messageClass,\n        key: message.id || message.created_at,\n        onLoadCapture: onMessageLoadCaptured\n      }, React.createElement(Message, __assign({\n        groupStyles: [groupStyles],\n        lastReceivedId: lastReceivedId,\n        message: message,\n        readBy: readData[message.id] || [],\n        threadList: threadList\n      }, internalMessageProps)));\n    });\n  }, [enrichedMessages, internalMessageProps, lastReceivedId, messageGroupStyles, onMessageLoadCaptured, readData, threadList]);\n  return elements;\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useMemo","useLastReadData","getLastReceived","CUSTOM_MESSAGE_TYPE","DateSeparator","DefaultDateSeparator","EventComponent","Message","useChatContext","useComponentContext","isDate","useMessageListElements","props","enrichedMessages","internalMessageProps","messageGroupStyles","onMessageLoadCaptured","read","returnAllReadData","threadList","_a","client","customClasses","_b","_c","HeaderComponent","_d","MessageSystem","readData","messages","userID","lastReceivedId","elements","map","message","customType","date","createElement","key","concat","toISOString","formatDate","unread","intro","type","event","created_at","groupStyles","id","messageClass","className","onLoadCapture","readBy"],"sources":["/home/betty/web-app-practice/memory-game/client/node_modules/stream-chat-react/dist/components/MessageList/hooks/useMessageListElements.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/* eslint-disable no-continue */\nimport React, { useMemo } from 'react';\nimport { useLastReadData } from './useLastReadData';\nimport { getLastReceived } from '../utils';\nimport { CUSTOM_MESSAGE_TYPE } from '../../../constants/messageTypes';\nimport { DateSeparator as DefaultDateSeparator } from '../../DateSeparator/DateSeparator';\nimport { EventComponent } from '../../EventComponent/EventComponent';\nimport { Message } from '../../Message';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useComponentContext } from '../../../context/ComponentContext';\nimport { isDate } from '../../../context/TranslationContext';\nexport var useMessageListElements = function (props) {\n    var enrichedMessages = props.enrichedMessages, internalMessageProps = props.internalMessageProps, messageGroupStyles = props.messageGroupStyles, onMessageLoadCaptured = props.onMessageLoadCaptured, read = props.read, returnAllReadData = props.returnAllReadData, threadList = props.threadList;\n    var _a = useChatContext('useMessageListElements'), client = _a.client, customClasses = _a.customClasses;\n    var _b = useComponentContext('useMessageListElements'), _c = _b.DateSeparator, DateSeparator = _c === void 0 ? DefaultDateSeparator : _c, HeaderComponent = _b.HeaderComponent, _d = _b.MessageSystem, MessageSystem = _d === void 0 ? EventComponent : _d;\n    // get the readData, but only for messages submitted by the user themselves\n    var readData = useLastReadData({\n        messages: enrichedMessages,\n        read: read,\n        returnAllReadData: returnAllReadData,\n        userID: client.userID,\n    });\n    var lastReceivedId = useMemo(function () { return getLastReceived(enrichedMessages); }, [enrichedMessages]);\n    var elements = useMemo(function () {\n        return enrichedMessages.map(function (message) {\n            var _a;\n            if (message.customType === CUSTOM_MESSAGE_TYPE.date &&\n                message.date &&\n                isDate(message.date)) {\n                return (React.createElement(\"li\", { key: \"\".concat(message.date.toISOString(), \"-i\") },\n                    React.createElement(DateSeparator, { date: message.date, formatDate: internalMessageProps.formatDate, unread: message.unread })));\n            }\n            if (message.customType === CUSTOM_MESSAGE_TYPE.intro && HeaderComponent) {\n                return (React.createElement(\"li\", { key: 'intro' },\n                    React.createElement(HeaderComponent, null)));\n            }\n            if (message.type === 'system') {\n                return (React.createElement(\"li\", { key: ((_a = message.event) === null || _a === void 0 ? void 0 : _a.created_at) ||\n                        message.created_at ||\n                        '' },\n                    React.createElement(MessageSystem, { message: message })));\n            }\n            var groupStyles = messageGroupStyles[message.id] || '';\n            var messageClass = (customClasses === null || customClasses === void 0 ? void 0 : customClasses.message) || \"str-chat__li str-chat__li--\".concat(groupStyles);\n            return (React.createElement(\"li\", { className: messageClass, \"data-message-id\": message.id, \"data-testid\": messageClass, key: message.id || message.created_at, onLoadCapture: onMessageLoadCaptured },\n                React.createElement(Message, __assign({ groupStyles: [groupStyles], lastReceivedId: lastReceivedId, message: message, readBy: readData[message.id] || [], threadList: threadList }, internalMessageProps))));\n        });\n    }, [\n        enrichedMessages,\n        internalMessageProps,\n        lastReceivedId,\n        messageGroupStyles,\n        onMessageLoadCaptured,\n        readData,\n        threadList,\n    ]);\n    return elements;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}