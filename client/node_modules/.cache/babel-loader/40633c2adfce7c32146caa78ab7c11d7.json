{"ast":null,"code":"import React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { Avatar as DefaultAvatar } from '../Avatar';\n\nvar UnMemoizedChannelPreviewMessenger = function (props) {\n  var _a, _b;\n\n  var active = props.active,\n      _c = props.Avatar,\n      Avatar = _c === void 0 ? DefaultAvatar : _c,\n      channel = props.channel,\n      _d = props.className,\n      customClassName = _d === void 0 ? '' : _d,\n      displayImage = props.displayImage,\n      displayTitle = props.displayTitle,\n      latestMessage = props.latestMessage,\n      customOnSelectChannel = props.onSelect,\n      setActiveChannel = props.setActiveChannel,\n      unread = props.unread,\n      watchers = props.watchers;\n  var channelPreviewButton = useRef(null);\n  var avatarName = displayTitle || ((_b = (_a = channel.state.messages[channel.state.messages.length - 1]) === null || _a === void 0 ? void 0 : _a.user) === null || _b === void 0 ? void 0 : _b.id);\n\n  var onSelectChannel = function (e) {\n    if (customOnSelectChannel) {\n      customOnSelectChannel(e);\n    } else if (setActiveChannel) {\n      setActiveChannel(channel, watchers);\n    }\n\n    if (channelPreviewButton === null || channelPreviewButton === void 0 ? void 0 : channelPreviewButton.current) {\n      channelPreviewButton.current.blur();\n    }\n  };\n\n  return React.createElement(\"button\", {\n    \"aria-label\": \"Select Channel: \".concat(displayTitle || ''),\n    \"aria-selected\": active,\n    className: clsx(\"str-chat__channel-preview-messenger str-chat__channel-preview\", active && 'str-chat__channel-preview-messenger--active', unread && unread >= 1 && 'str-chat__channel-preview-messenger--unread', customClassName),\n    \"data-testid\": 'channel-preview-button',\n    onClick: onSelectChannel,\n    ref: channelPreviewButton,\n    role: 'option'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--left'\n  }, React.createElement(Avatar, {\n    image: displayImage,\n    name: avatarName,\n    size: 40\n  })), React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--right str-chat__channel-preview-end'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-end-first-row'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--name'\n  }, React.createElement(\"span\", null, displayTitle)), !!unread && React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-unread-badge',\n    \"data-testid\": 'unread-badge'\n  }, unread)), React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--last-message'\n  }, latestMessage)));\n};\n/**\n * Used as preview component for channel item in [ChannelList](#channellist) component.\n * Its best suited for messenger type chat.\n */\n\n\nexport var ChannelPreviewMessenger = React.memo(UnMemoizedChannelPreviewMessenger);","map":{"version":3,"names":["React","useRef","clsx","Avatar","DefaultAvatar","UnMemoizedChannelPreviewMessenger","props","_a","_b","active","_c","channel","_d","className","customClassName","displayImage","displayTitle","latestMessage","customOnSelectChannel","onSelect","setActiveChannel","unread","watchers","channelPreviewButton","avatarName","state","messages","length","user","id","onSelectChannel","e","current","blur","createElement","concat","onClick","ref","role","image","name","size","ChannelPreviewMessenger","memo"],"sources":["/home/betty/web-app-practice/memory-game/client/node_modules/stream-chat-react/dist/components/ChannelPreview/ChannelPreviewMessenger.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nvar UnMemoizedChannelPreviewMessenger = function (props) {\n    var _a, _b;\n    var active = props.active, _c = props.Avatar, Avatar = _c === void 0 ? DefaultAvatar : _c, channel = props.channel, _d = props.className, customClassName = _d === void 0 ? '' : _d, displayImage = props.displayImage, displayTitle = props.displayTitle, latestMessage = props.latestMessage, customOnSelectChannel = props.onSelect, setActiveChannel = props.setActiveChannel, unread = props.unread, watchers = props.watchers;\n    var channelPreviewButton = useRef(null);\n    var avatarName = displayTitle || ((_b = (_a = channel.state.messages[channel.state.messages.length - 1]) === null || _a === void 0 ? void 0 : _a.user) === null || _b === void 0 ? void 0 : _b.id);\n    var onSelectChannel = function (e) {\n        if (customOnSelectChannel) {\n            customOnSelectChannel(e);\n        }\n        else if (setActiveChannel) {\n            setActiveChannel(channel, watchers);\n        }\n        if (channelPreviewButton === null || channelPreviewButton === void 0 ? void 0 : channelPreviewButton.current) {\n            channelPreviewButton.current.blur();\n        }\n    };\n    return (React.createElement(\"button\", { \"aria-label\": \"Select Channel: \".concat(displayTitle || ''), \"aria-selected\": active, className: clsx(\"str-chat__channel-preview-messenger str-chat__channel-preview\", active && 'str-chat__channel-preview-messenger--active', unread && unread >= 1 && 'str-chat__channel-preview-messenger--unread', customClassName), \"data-testid\": 'channel-preview-button', onClick: onSelectChannel, ref: channelPreviewButton, role: 'option' },\n        React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--left' },\n            React.createElement(Avatar, { image: displayImage, name: avatarName, size: 40 })),\n        React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--right str-chat__channel-preview-end' },\n            React.createElement(\"div\", { className: 'str-chat__channel-preview-end-first-row' },\n                React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--name' },\n                    React.createElement(\"span\", null, displayTitle)),\n                !!unread && (React.createElement(\"div\", { className: 'str-chat__channel-preview-unread-badge', \"data-testid\": 'unread-badge' }, unread))),\n            React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--last-message' }, latestMessage))));\n};\n/**\n * Used as preview component for channel item in [ChannelList](#channellist) component.\n * Its best suited for messenger type chat.\n */\nexport var ChannelPreviewMessenger = React.memo(UnMemoizedChannelPreviewMessenger);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}